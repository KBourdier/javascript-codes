class School{

  constructor(name, level, numberOfStudents){
    this._name = name;
    this._level = level;
    this._numberOfStudents = numberOfStudents;
  }

  get name(){
    return this._name;
  }
  get level(){
    return this._level;
  }
  get numberOfStudents(){
    return this._numberOfStudents;
  }

  set numberOfStudents(newNumberOfStudents){
    if(value.isNaN()){
    console.log("NumberOfStudents must be set to a number.")
    }
    else {
      this._numberOfStudents = value;
    }
  }

  quickFacts() {
    console.log(`${this.name} educates ${this.numberOfStudents} students at the ${this.level} school level.`);
  }

  static pickSubstituteTeacher(substituteTeachers) {
    const randInt = Math.floor(Math.random() * substituteTeachers.length);
    return substituteTeachers[randInt];
  }
}

class PrimarySchool extends School {

  constructor(name, numberOfStudents, pickupPolicy){
    super(name, 'primary', numberOfStudents);
    this._pickupPolicy = pickupPolicy;
  }

  get pickupPolicy(){
    return this._pickupPolicy;
  }
}

class HighSchool extends School {

  constructor(name, numberOfStudents, sportsTeams){
    super(name, 'high', numberOfStudents);
    this._sportsTeams = sportsTeams;
  }

  get sportsTeams() {
    return this._sportsTeams;
  }
}

const saintStephens = new PrimarySchool('Saint Stephens', 514, 'Students must be picked up by a parent, guardian, or a family member over the age of 13.');

saintStephens.quickFacts();

const sub = School.pickSubstituteTeacher(['Mike Oxlong', 'Hugh Richard', 'J. P. Morgan', 'James Harden', 'Big Shaq', 'Al Sizzler']);

const PanAsiaInternationalSchool = new HighSchool('Pan Asia International School', 415, ['Swimming', 'Muay Thai', 'Beach Volleyball', 'Golf']);

PanAsiaInternationalSchool.quickFacts();
console.log(PanAsiaInternationalSchool.sportsTeams);
